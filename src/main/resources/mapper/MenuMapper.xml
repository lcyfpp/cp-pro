<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linkedaim.admin.system.mapper.MenuMapper">
    <resultMap id="BaseResultMap" type="com.linkedaim.admin.system.model.entity.Menu">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="menu_name" jdbcType="VARCHAR" property="menuName"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="type" jdbcType="CHAR" property="type"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="order_num" jdbcType="BIGINT" property="orderNum"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="perms" jdbcType="LONGVARCHAR" property="perms"/>
    </resultMap>

    <!-- 获取用户权限列表-->
    <select id="getUserPermList" resultMap="BaseResultMap">
        select distinct m.*
        from t_menu m
        left join t_role_menu rm on m.id = rm.menu_id
        left join t_user_role ur on rm.role_id = ur.role_id
        where m.status = 1 and ur.user_id = #{userId}  and m.perms is not null and m.perms != ''
    </select>


    <!-- 初始化菜单树 -->
    <!-- 这里的id的值作为下面的查询返回结果resultMap的值 -->
    <!-- collection中的column属性可以为多个值，这里只有一个，它作为下面递归查询传递进去的参数 -->
    <!-- ofType和javaType属性正好联合构成了数据Bean类Category中的childrenList属性的数据类型 -->
    <!-- select的值为下面递归查询的select标签的id值 -->
    <resultMap extends="BaseResultMap" id="userMenuListMap" type="com.linkedaim.admin.system.model.entity.dto.MenuDTO">
        <collection column="id" ofType="com.linkedaim.admin.system.model.entity.dto.MenuDTO" property="childList"
                    select="getUserMenuChildList">
        </collection>
    </resultMap>

    <!-- 先查询菜单根级目录 -->
    <!-- 这里的返回结果必须为resultMap，并且值为上面构建的resultMap的id的值 -->
    <select id="getUserMenuList" resultMap="userMenuListMap">
        select m.* from t_menu m
        left join t_role_menu rm on m.id = rm.menu_id
        left join t_user_role ur on rm.role_id = ur.role_id
        where m.status = 1 and m.parent_id = 0 and ur.user_id = #{userId}
        order by m.order_num asc
    </select>

    <!-- 再利用上次查询结果colliection中column的值cid做递归查询，查出所有子菜单 -->
    <!-- 这里的返回结果必须为resultMap，并且值为上面构建的resultMap的id的值 -->
    <select id="getUserMenuChildList" resultMap="userMenuListMap">
        select * from t_menu
        where status = 1 and parent_id = #{id}
        order by order_num asc
    </select>

    <resultMap extends="BaseResultMap" id="menuListMap" type="com.linkedaim.admin.system.model.entity.dto.MenuDTO">
        <collection column="{id=id,status=pstatus}" ofType="com.linkedaim.admin.system.model.entity.dto.MenuDTO" property="childList"
                    select="getMenuChildList">
        </collection>
    </resultMap>

    <!-- 先查询菜单根级目录 -->
    <!-- 这里的返回结果必须为resultMap，并且值为上面构建的resultMap的id的值 -->
    <select id="getMenuAllList" resultMap="menuListMap">
        select *,IFNULL(#{status},'') pstatus from t_menu
        where parent_id = 0
        <if test="status!=null and status!=''">
            and status = #{status}
        </if>
        order by order_num asc
    </select>

    <!-- 再利用上次查询结果colliection中column的值cid做递归查询，查出所有子菜单 -->
    <!-- 这里的返回结果必须为resultMap，并且值为上面构建的resultMap的id的值 -->
    <select id="getMenuChildList" resultMap="menuListMap">
        select * from t_menu
        where parent_id = #{id}
        <if test="status!=null and status!=''">
            and status = #{status}
        </if>
        order by order_num asc
    </select>


</mapper>
